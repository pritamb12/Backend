server.port=8086
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=test123
spring.jpa.generate-ddl= true

server.error.include-message=always


#spring.data.rest.basePath=/api
#server.servlet.context-path=/api




#keycloak
keycloak.auth-server-url=http://localhost:8080/
keycloak.realm=Springboot
keycloak.resource=springboot-keycloak
keycloak.credentials.secret=fiRCOaQHM4LghUPLGHYyWQqOSeZ8LDtk
keycloak.ssl-required = external
keycloak.use-resource-role-mappings = true



keycloak.securityConstraints[0].authRoles[0] = admin
keycloak.securityConstraints[0].authRoles[1] = user
keycloak.securityConstraints[0].securityCollections[0].name = insecure stuff
keycloak.securityConstraints[0].securityCollections[0].patterns[0] = /insecure

keycloak.securityConstraints[1].authRoles[0] = admin
keycloak.securityConstraints[1].securityCollections[0].name = admin stuff
keycloak.securityConstraints[1].securityCollections[0].patterns[0] = /admin

spring.sql.init.mode=always
spring.sql.init.continue-on-error=true

#logs
logging.level.com.softwareChaser.springboot.Controller=ERROR
logging.file.name=logginginfo
logging.file.path=/
logging.pattern.file=%d [%level] %m%n

#actuator

##Different basepath for management APIs
management.endpoints.web.base-path=/manage
##Include all the endpoint APIs
management.endpoints.web.exposure.include=*
##To expose only selected endpoints
management.endpoints.jmx.exposure.include=health,info,env,beans,logfiles,loggers,prometheus,threaddump
##Roles used to determine whether or not a user is authorized to be shown details.
#management.endpoint.health.roles="ROLE_ADMIN"


